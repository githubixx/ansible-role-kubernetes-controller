---
# Copyright (C) 2023 Robert Wimmer
# SPDX-License-Identifier: GPL-3.0-or-later

- name: Create directory for kubeconfig files
  file:
    path: "{{ k8s_config_directory }}"
    owner: "{{ k8s_config_owner }}"
    group: "{{ k8s_config_group }}"
    mode: "{{ k8s_config_directory_perm }}"
    state: directory

- name: Generate a kubeconfig file for each worker node (set-cluster)
  shell: >
    set -o errexit; \
    kubectl config set-cluster {{ k8s_config_cluster_name }} \
      --certificate-authority={{ k8s_ca_conf_directory }}/ca-k8s-apiserver.pem \
      --embed-certs=true \
      --server=https://10.10.10.10:{{ k8s_apiserver_secure_port }} \
      --kubeconfig={{ k8s_config_directory }}/{{ item }}.kubeconfig
  args:
    executable: /bin/bash
  with_inventory_hostnames:
    - k8s_worker

- name: Generate a kubeconfig file for each worker node (set-credentials)
  shell: >
    set -o errexit; \
    kubectl config set-credentials system:node:{{hostvars[item]['inventory_hostname_short']}} \
      --client-certificate={{ k8s_ca_conf_directory }}/cert-{{ item }}.pem \
      --client-key={{ k8s_ca_conf_directory }}/cert-{{ item }}-key.pem \
      --embed-certs=true \
      --kubeconfig={{ k8s_config_directory }}/{{ item }}.kubeconfig
  args:
    executable: /bin/bash
  with_inventory_hostnames:
    - k8s_worker

- name: Generate a kubeconfig file for each worker node (set-context)
  shell: >
    set -o errexit; \
    kubectl config set-context default \
      --cluster={{ k8s_config_cluster_name }} \
      --user=system:node:{{ hostvars[item]['inventory_hostname_short'] }} \
      --kubeconfig={{ k8s_config_directory }}/{{ item }}.kubeconfig
  args:
    executable: /bin/bash
  with_inventory_hostnames:
    - k8s_worker

- name: Set use-context
  shell: >
    set -o errexit; \
    kubectl config use-context default \
      --kubeconfig={{ k8s_config_directory }}/{{ item }}.kubeconfig
  args:
    executable: /bin/bash
  with_inventory_hostnames:
    - k8s_worker

- name: Set file permissions
  file:
    path: "{{ k8s_config_directory }}/{{ item }}.kubeconfig"
    owner: "{{ k8s_config_owner }}"
    group: "{{ k8s_config_group }}"
    mode: '{{ k8s_config_file_perm }}'
    modification_time: "preserve"
    access_time: "preserve"
  with_inventory_hostnames:
    - k8s_worker
